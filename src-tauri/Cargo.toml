[package]
name = "ark-drop"
version = "0.1.0"
description = "An app to sync files between devices"
authors = ["you"]
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
# The `_lib` suffix may seem redundant but it is necessary
# to make the lib name unique and wouldn't conflict with the bin name.
# This seems to be only an issue on Windows, see https://github.com/rust-lang/cargo/issues/8519
name = "ark_drop_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[build-dependencies]
tauri-build = { version = "2.5.1", features = [] }

[dependencies]
drop_core = { path = "../core" }
tauri = { version = "2.9.1", features = ["tray-icon"] }
tauri-plugin-opener = "2.5.0"
tauri-plugin-dialog = "2.4.0"
tauri-plugin-clipboard-manager = "2.3.0"
tauri-plugin-store = "2.4.1"
dirs = "6.0.0"
open = "5.3.2"
whoami = "1.5.2"

anyhow = { workspace = true }

# Add dropx dependencies for direct access to SendFilesBubble
dropx-sender = { workspace = true }

tokio = { workspace = true, features = ["full"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"

[package.metadata.bundle]
icon = [
  "icons/32x32.png",
  "icons/64x64.png",
  "icons/128x128.png",
  "icons/128x128@2x.png",
  "icons/icon.icns",
  "icons/icon.ico"
]

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

